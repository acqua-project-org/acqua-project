
package org.inria.acqua.forms;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.UIManager;

public class CommandLineWindow extends javax.swing.JFrame {

    private ArrayList<String> commandsList;
    private int currentCommand;
    private Commandable commandable;
    /** Look & feel stuff. */
    static{
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch(Exception e){
            System.err.println("ERROR: Cannot initialize display: '" + e.getMessage() + "'.");
            System.exit(-1);
        }
   }

    /** Creates new form CommandLineWindow */
    public CommandLineWindow(String title, Commandable commandable) {
        this.commandable = commandable;
        commandsList = new ArrayList<String>();
        currentCommand = 0;
        initComponents();
        this.setTitle(title);
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        outputTextBox = new javax.swing.JTextArea();
        commandLineTextBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputTextBox.setColumns(20);
        outputTextBox.setEditable(false);
        outputTextBox.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        outputTextBox.setRows(5);
        outputTextBox.setFocusable(false);
        jScrollPane2.setViewportView(outputTextBox);

        commandLineTextBox.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        commandLineTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandLineTextBoxActionPerformed(evt);
            }
        });
        commandLineTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                commandLineTextBoxKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                commandLineTextBoxKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(commandLineTextBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commandLineTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void commandLineTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandLineTextBoxActionPerformed

    }//GEN-LAST:event_commandLineTextBoxActionPerformed

    private void commandLineTextBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commandLineTextBoxKeyTyped

    }//GEN-LAST:event_commandLineTextBoxKeyTyped

    private void updateCommandLine(){
        try{
            commandLineTextBox.setText(commandsList.get(currentCommand));
        }catch(Exception e){
            commandLineTextBox.setText("");
        }
    }

    private void commandLineTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commandLineTextBoxKeyPressed
        if ((int)evt.getKeyCode() == KeyEvent.VK_ENTER){
            String currentText = commandLineTextBox.getText();
            if (currentText.isEmpty()==false){
                commandsList.add(currentText);
                String output = commandable.sendCommand(currentText);
                this.outputTextBox.setText(this.outputTextBox.getText() + "\n>>" + currentText + "\n" + output);
                commandLineTextBox.setText("");
                currentCommand = commandsList.size()-1;
            }
        }

        if ((int)evt.getKeyCode() == KeyEvent.VK_UP){
            currentCommand = (currentCommand<=0)?0:currentCommand-1;
            updateCommandLine();
        }

        if ((int)evt.getKeyCode() == KeyEvent.VK_DOWN){
            currentCommand = (currentCommand>=commandsList.size())?commandsList.size():currentCommand+1;
            updateCommandLine();
        }

//        logger.info("current command: " + currentCommand + "\nCommands: ");
//        for(String str:commandsList){
//            System.out.print(str + " ");
//        }
//        logger.info("\n Key: " + evt.getKeyCode());

    }//GEN-LAST:event_commandLineTextBoxKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CommandLineWindow("Title", null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField commandLineTextBox;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputTextBox;
    // End of variables declaration//GEN-END:variables

}
